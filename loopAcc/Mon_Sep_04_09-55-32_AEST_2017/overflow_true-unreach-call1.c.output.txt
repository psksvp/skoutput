define i32 @main() #0  { 
  
    %1 = alloca i32, align 4
    %x = alloca i32, align 4
    store i32 0, i32* %1
    store i32 10, i32* %x, align 4, !dbg !17
    br label %2, !dbg !18
  
  ; <label>:2
    %3 = load i32, i32* %x, align 4, !dbg !19
    %4 = icmp uge i32 %3, 10, !dbg !22
    br i1 %4, label %5, label %8, !dbg !18
  
  ; <label>:5
    %6 = load i32, i32* %x, align 4, !dbg !23
    %7 = add i32 %6, 2, !dbg !23
    store i32 %7, i32* %x, align 4, !dbg !23
    br label %2, !dbg !18
  
  ; <label>:8
    %9 = load i32, i32* %x, align 4, !dbg !24
    %10 = urem i32 %9, 2, !dbg !25
    %11 = icmp ne i32 %10, 0, !dbg !25
    br i1 %11, label %12, label %13, !dbg !24
  
  ; <label>:12
    br label %__error.12
  
  ; <label>:13
    %14 = load i32, i32* %1, !dbg !27
    ret i32 %14, !dbg !27
  
  __error.12: 
    call void (...) @__VERIFIER_error() #2 , !dbg !26
    unreachable, !dbg !26
  
} 

using predicates abs
List(0, 1, 0, 0)
no Repetitions, rtn linear automaton
linear auto created and about to return
using predicates abs
generating predicates for abstraction
list of variables to quantify over is empty
running with predicates: 4
(%x  >= 0 ) ,
(%x  >= 10 ) ,
(%x  <= 9 ) ,
((%x % 2 )  >= 1 ) 
I am doing the trace:List(0, 0, 0, 1, 0, 0)

Fixed point reached with Predicates ===============
true 
 Or(  And(  Not( ((%x % 2 )  >= 1 ) ) , Not( (%x  <= 9 ) ) ,(%x  >= 0 ) ,(%x  >= 10 ) ) ,false ) 
 Or(  And(  Not( ((%x % 2 )  >= 1 ) ) , Not( (%x  <= 9 ) ) ,(%x  >= 0 ) ,(%x  >= 10 ) ) ,false ,false ) 
 Or(  And(  Not( ((%x % 2 )  >= 1 ) ) , Not( (%x  <= 9 ) ) ,(%x  >= 0 ) ,(%x  >= 10 ) ) ,false ) 
false 
false 
------------
simplify cache hit is 9 and mis is 1
last loc eq to false? >>>yes
------------------safeBackEdges
candidate pairs Vector((1,3))
new backedge found from 3 to 2 with choice(1) exitValue is 0
----------------------
TRUE