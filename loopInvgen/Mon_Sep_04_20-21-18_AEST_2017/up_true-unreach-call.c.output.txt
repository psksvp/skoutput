define i32 @main() local_unnamed_addr #0 !dbg !14 { 
  
    %1 = tail call i32 (...) @__VERIFIER_nondet_int() #2 , !dbg !15
    %2 = icmp sgt i32 %1, 0, !dbg !16
    br i1 %2, label %3, label %14, !dbg !18
  
  ; <label>:3
    br label %4, !dbg !19
  
  ; <label>:4
    %5 = phi i32 [ %10, %9 ], [ 0, %3 ]
    %6 = phi i32 [ %11, %9 ], [ %1, %3 ]
    %7 = icmp sgt i32 %6, 0, !dbg !19
    br i1 %7, label %9, label %8, !dbg !20
  
  ; <label>:8
    br label %__error.8
  
  ; <label>:9
    %10 = add nuw nsw i32 %5, 1, !dbg !24
    %11 = add nsw i32 %6, -1, !dbg !25
    %12 = icmp eq i32 %10, %1, !dbg !26
    br i1 %12, label %13, label %4, !dbg !27, !llvm.loop !28
  
  ; <label>:13
    br label %14, !dbg !31
  
  ; <label>:14
    ret i32 0, !dbg !31
  
  __error.8: 
    tail call void @__VERIFIER_error() #2 , !dbg !22
    br label %9, !dbg !23
  
} 

using predicates abs
List(0, 0, 1, 0)
no Repetitions, rtn linear automaton
linear auto created and about to return
using predicates abs
List(0, 0, 0, 1, 1, 0)
no Repetitions, rtn linear automaton
linear auto created and about to return
using predicates abs
generating predicates for abstraction
list of variables to quantify over is empty
running with predicates: 10
(%6  <= 0 ) ,
 Not( (%10  = %1 ) ) ,
(%6  = %11 ) ,
(%6  = %1 ) ,
(%5  = 0 ) ,
(%11  = ((- 1 )  + %6 ) ) ,
 Not( (%1  <= 0 ) ) ,
 Not( (%6  <= 0 ) ) ,
(%5  = %10 ) ,
(%10  = (1  + %5 ) ) 
I am doing the trace:List(0, 0, 0, 1, 0, 1, 1, 0)

Fixed point reached with Predicates ===============
true 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  And(  Or(  Not( (%6  = %11 ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) ) , Or(  Not( (%5  = %10 ) ) , Not( (%10  = (1  + %5 ) ) ) ) , Or(  Not( (%10  = %1 ) ) , Not( (%5  = %10 ) ) ) , Not( (%6  <= 0 ) ) ,(%6  = %1 ) ,(%5  = 0 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ) ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not(  Not( (%6  <= 0 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  = %1 ) ) ,(%6  <= 0 ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) ,(%5  = %10 ) ) ,false ) 
------------
simplify cache hit is 41 and mis is 8
last loc eq to false? >>>no
using predicates abs
generating predicates for abstraction
list of variables to quantify over is empty
running with predicates: 10
(%6  <= 0 ) ,
 Not( (%10  = %1 ) ) ,
(%6  = %11 ) ,
(%6  = %1 ) ,
(%5  = 0 ) ,
(%11  = ((- 1 )  + %6 ) ) ,
 Not( (%1  <= 0 ) ) ,
 Not( (%6  <= 0 ) ) ,
(%5  = %10 ) ,
(%10  = (1  + %5 ) ) 
I am doing the trace:List(0, 0, 0, 1, 0, 1, 0, 1, 1, 0)

Fixed point reached with Predicates ===============
true 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  And(  Or(  Not( (%6  = %11 ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) ) , Or(  Not( (%5  = %10 ) ) , Not( (%10  = (1  + %5 ) ) ) ) , Or(  Not( (%10  = %1 ) ) , Not( (%5  = %10 ) ) ) , Not( (%6  <= 0 ) ) ,(%6  = %1 ) ,(%5  = 0 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ) ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not(  Not( (%6  <= 0 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  = %1 ) ) ,(%6  <= 0 ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) ,(%5  = %10 ) ) ,false ) 
------------
simplify cache hit is 114 and mis is 8
last loc eq to false? >>>no
using predicates abs
generating predicates for abstraction
list of variables to quantify over is empty
running with predicates: 10
(%6  <= 0 ) ,
 Not( (%10  = %1 ) ) ,
(%6  = %11 ) ,
(%6  = %1 ) ,
(%5  = 0 ) ,
(%11  = ((- 1 )  + %6 ) ) ,
 Not( (%1  <= 0 ) ) ,
 Not( (%6  <= 0 ) ) ,
(%5  = %10 ) ,
(%10  = (1  + %5 ) ) 
I am doing the trace:List(0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0)

Fixed point reached with Predicates ===============
true 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  And(  Or(  Not( (%6  = %11 ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) ) , Or(  Not( (%5  = %10 ) ) , Not( (%10  = (1  + %5 ) ) ) ) , Or(  Not( (%10  = %1 ) ) , Not( (%5  = %10 ) ) ) , Not( (%6  <= 0 ) ) ,(%6  = %1 ) ,(%5  = 0 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ) ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not(  Not( (%6  <= 0 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  = %1 ) ) ,(%6  <= 0 ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) ,(%5  = %10 ) ) ,false ) 
------------
simplify cache hit is 237 and mis is 8
last loc eq to false? >>>no
using predicates abs
generating predicates for abstraction
list of variables to quantify over is empty
running with predicates: 10
(%6  <= 0 ) ,
 Not( (%10  = %1 ) ) ,
(%6  = %11 ) ,
(%6  = %1 ) ,
(%5  = 0 ) ,
(%11  = ((- 1 )  + %6 ) ) ,
 Not( (%1  <= 0 ) ) ,
 Not( (%6  <= 0 ) ) ,
(%5  = %10 ) ,
(%10  = (1  + %5 ) ) 
I am doing the trace:List(0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0)

Fixed point reached with Predicates ===============
true 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  And(  Or(  Not( (%6  = %11 ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) ) , Or(  Not( (%5  = %10 ) ) , Not( (%10  = (1  + %5 ) ) ) ) , Or(  Not( (%10  = %1 ) ) , Not( (%5  = %10 ) ) ) , Not( (%6  <= 0 ) ) ,(%6  = %1 ) ,(%5  = 0 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ) ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not(  Not( (%6  <= 0 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  = %1 ) ) ,(%6  <= 0 ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) ,(%5  = %10 ) ) ,false ) 
------------
simplify cache hit is 431 and mis is 8
last loc eq to false? >>>no
using predicates abs
generating predicates for abstraction
list of variables to quantify over is empty
running with predicates: 10
(%6  <= 0 ) ,
 Not( (%10  = %1 ) ) ,
(%6  = %11 ) ,
(%6  = %1 ) ,
(%5  = 0 ) ,
(%11  = ((- 1 )  + %6 ) ) ,
 Not( (%1  <= 0 ) ) ,
 Not( (%6  <= 0 ) ) ,
(%5  = %10 ) ,
(%10  = (1  + %5 ) ) 
I am doing the trace:List(0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0)

Fixed point reached with Predicates ===============
true 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  And(  Or(  Not( (%6  = %11 ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) ) , Or(  Not( (%5  = %10 ) ) , Not( (%10  = (1  + %5 ) ) ) ) , Or(  Not( (%10  = %1 ) ) , Not( (%5  = %10 ) ) ) , Not( (%6  <= 0 ) ) ,(%6  = %1 ) ,(%5  = 0 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ) ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not(  Not( (%6  <= 0 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  = %1 ) ) ,(%6  <= 0 ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) ,(%5  = %10 ) ) ,false ) 
------------
simplify cache hit is 721 and mis is 8
last loc eq to false? >>>no
using predicates abs
generating predicates for abstraction
list of variables to quantify over is empty
running with predicates: 10
(%6  <= 0 ) ,
 Not( (%10  = %1 ) ) ,
(%6  = %11 ) ,
(%6  = %1 ) ,
(%5  = 0 ) ,
(%11  = ((- 1 )  + %6 ) ) ,
 Not( (%1  <= 0 ) ) ,
 Not( (%6  <= 0 ) ) ,
(%5  = %10 ) ,
(%10  = (1  + %5 ) ) 
I am doing the trace:List(0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0)

Fixed point reached with Predicates ===============
true 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  Not( (%1  <= 0 ) ) ,false ) 
 Or(  And(  Or(  Not( (%6  = %11 ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) ) , Or(  Not( (%5  = %10 ) ) , Not( (%10  = (1  + %5 ) ) ) ) , Or(  Not( (%10  = %1 ) ) , Not( (%5  = %10 ) ) ) , Not( (%6  <= 0 ) ) ,(%6  = %1 ) ,(%5  = 0 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ) ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %1 ) ,(%5  = 0 ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ,false , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ,false , And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) , And(  Not( (%5  = %10 ) ) , Not( (%5  = 0 ) ) , Not( (%6  = %1 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false , And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%5  = %10 ) ) ,false ,false ) 
 Or(  And(  Not( (%5  = %10 ) ) , Not( (%6  = %11 ) ) , Not( (%6  <= 0 ) ) , Not( (%10  = %1 ) ) ,(%11  = ((- 1 )  + %6 ) ) , Not( (%1  <= 0 ) ) , Not( (%6  <= 0 ) ) ,(%10  = (1  + %5 ) ) ) ,false ) 
 Or(  And(  Not( (%10  = (1  + %5 ) ) ) , Not(  Not( (%6  <= 0 ) ) ) , Not( (%11  = ((- 1 )  + %6 ) ) ) , Not( (%6  = %1 ) ) ,(%6  <= 0 ) , Not( (%10  = %1 ) ) ,(%6  = %11 ) , Not( (%1  <= 0 ) ) ,(%5  = %10 ) ) ,false ) 
------------
simplify cache hit is 1136 and mis is 8
last loc eq to false? >>>no
using predicates abs
generating predicates for abstraction
list of variables to quantify over is empty
running with predicates: 10
(%6  <= 0 ) ,
 Not( (%10  = %1 ) ) ,
(%6  = %11 ) ,
(%6  = %1 ) ,
(%5  = 0 ) ,
(%11  = ((- 1 )  + %6 ) ) ,
 Not( (%1  <= 0 ) ) ,
 Not( (%6  <= 0 ) ) ,
(%5  = %10 ) ,
(%10  = (1  + %5 ) ) 
I am doing the trace:List(0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0)