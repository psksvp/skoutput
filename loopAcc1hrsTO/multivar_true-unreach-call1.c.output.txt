
define i32 @main() #0  { 
  
    %1 = alloca i32, align 4
    %x = alloca i32, align 4
    %y = alloca i32, align 4
    store i32 0, i32* %1
    %2 = call i32 @__VERIFIER_nondet_uint() , !dbg !17
    store i32 %2, i32* %x, align 4, !dbg !18
    %3 = load i32, i32* %x, align 4, !dbg !19
    store i32 %3, i32* %y, align 4, !dbg !20
    br label %4, !dbg !21
  
  ; <label>:4
    %5 = load i32, i32* %x, align 4, !dbg !22
    %6 = icmp ult i32 %5, 1024, !dbg !25
    br i1 %6, label %7, label %12, !dbg !21
  
  ; <label>:7
    %8 = load i32, i32* %x, align 4, !dbg !26
    %9 = add i32 %8, 1, !dbg !26
    store i32 %9, i32* %x, align 4, !dbg !26
    %10 = load i32, i32* %y, align 4, !dbg !27
    %11 = add i32 %10, 1, !dbg !27
    store i32 %11, i32* %y, align 4, !dbg !27
    br label %4, !dbg !21
  
  ; <label>:12
    %13 = load i32, i32* %x, align 4, !dbg !28
    %14 = load i32, i32* %y, align 4, !dbg !29
    %15 = icmp eq i32 %13, %14, !dbg !30
    br i1 %15, label %17, label %16, !dbg !31
  
  ; <label>:16
    br label %__error.16
  
  ; <label>:17
    %18 = load i32, i32* %1, !dbg !33
    ret i32 %18, !dbg !33
  
  __error.16: 
    call void (...) @__VERIFIER_error() #3 , !dbg !32
    unreachable, !dbg !32
  
} 

using predicates abs
List(0, 1, 1, 0)
no Repetitions, rtn linear automaton
linear auto created and about to return
using predicates abs
generating predicates for abstraction
running with input predicates: 7
(%x  <= 1023 ) ,
 Or( ((%x  + ((- 1 )  * %y ) )  <= (- 1 ) ) ,((((- 1 )  * %x )  + %y )  <= (- 1 ) ) ) ,
((%y  + ((- 1 )  * %x ) )  <= 0 ) ,
(%x  >= 0 ) ,
(%1  = 0 ) ,
((%x  + ((- 1 )  * %y ) )  <= 0 ) ,
(1024  <= %x ) 
I am doing the trace:List(0, 0, 0, 1, 1, 0)
.....
Fixed point reached with Predicates ===============
true 
 Or(  And(  Or(  Not( (%x  <= 1023 ) ) , Not( (1024  <= %x ) ) ) , Or( (%x  <= 1023 ) ,(1024  <= %x ) ) , Not(  Or( ((%x  + ((- 1 )  * %y ) )  <= (- 1 ) ) ,((((- 1 )  * %x )  + %y )  <= (- 1 ) ) ) ) ,((%y  + ((- 1 )  * %x ) )  <= 0 ) ,(%x  >= 0 ) ,(%1  = 0 ) ,((%x  + ((- 1 )  * %y ) )  <= 0 ) ) ,false ) 
 Or(  And(  Not( (1024  <= %x ) ) , Not(  Or( ((%x  + ((- 1 )  * %y ) )  <= (- 1 ) ) ,((((- 1 )  * %x )  + %y )  <= (- 1 ) ) ) ) ,(%x  <= 1023 ) ,((%y  + ((- 1 )  * %x ) )  <= 0 ) ,(%x  >= 0 ) ,(%1  = 0 ) ,((%x  + ((- 1 )  * %y ) )  <= 0 ) ) ,false ,false ) 
 Or(  And(  Or(  Not( (%x  <= 1023 ) ) , Not( (1024  <= %x ) ) ) , Or( (%x  <= 1023 ) ,(1024  <= %x ) ) , Not(  Or( ((%x  + ((- 1 )  * %y ) )  <= (- 1 ) ) ,((((- 1 )  * %x )  + %y )  <= (- 1 ) ) ) ) ,((%y  + ((- 1 )  * %x ) )  <= 0 ) ,(%x  >= 0 ) ,(%1  = 0 ) ,((%x  + ((- 1 )  * %y ) )  <= 0 ) ) ,false ) 
 Or(  And(  Not(  Or( ((%x  + ((- 1 )  * %y ) )  <= (- 1 ) ) ,((((- 1 )  * %x )  + %y )  <= (- 1 ) ) ) ) , Not( (%x  <= 1023 ) ) ,((%y  + ((- 1 )  * %x ) )  <= 0 ) ,(%x  >= 0 ) ,(%1  = 0 ) ,((%x  + ((- 1 )  * %y ) )  <= 0 ) ,(1024  <= %x ) ) ,false ) 
false 
------------
simplify cache hit is 830 and mis is 45
last loc eq to false? >>>yes
------------------safeBackEdges
candidate pairs Vector((1,3))
new backedge found from 3 to 2 with choice(1) exitValue is 0
----------------------
TRUE
