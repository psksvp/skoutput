define i32 @main(i32 %argc, i8** %arg) #0  { 
  
    %1 = alloca i32, align 4
    %2 = alloca i32, align 4
    %3 = alloca i8**, align 8
    %a = alloca i32, align 4
    %i = alloca i32, align 4
    store i32 0, i32* %1
    store i32 %argc, i32* %2, align 4
    store i8** %arg, i8*** %3, align 8
    store i32 0, i32* %a, align 4, !dbg !9
    store i32 0, i32* %i, align 4, !dbg !10
    br label %4, !dbg !11
  
  ; <label>:4
    %5 = load i32, i32* %i, align 4, !dbg !12
    %6 = icmp slt i32 %5, 1000, !dbg !15
    br i1 %6, label %7, label %16, !dbg !11
  
  ; <label>:7
    %8 = load i32, i32* %i, align 4, !dbg !16
    %9 = load i32, i32* %a, align 4, !dbg !17
    %10 = icmp ne i32 %8, %9, !dbg !18
    br i1 %10, label %11, label %12, !dbg !16
  
  ; <label>:11
    br label %__error.11
  
  ; <label>:12
    %13 = load i32, i32* %i, align 4, !dbg !20
    %14 = add nsw i32 %13, 1, !dbg !21
    store i32 %14, i32* %i, align 4, !dbg !22
    %15 = load i32, i32* %i, align 4, !dbg !23
    store i32 %15, i32* %a, align 4, !dbg !24
    br label %4, !dbg !11
  
  ; <label>:16
    %17 = load i32, i32* %i, align 4, !dbg !25
    %18 = icmp ne i32 %17, 1000, !dbg !26
    br i1 %18, label %19, label %20, !dbg !25
  
  ; <label>:19
    br label %__error.19
  
  ; <label>:20
    %21 = load i32, i32* %a, align 4, !dbg !28
    %22 = icmp ne i32 %21, 1000, !dbg !29
    br i1 %22, label %23, label %24, !dbg !28
  
  ; <label>:23
    br label %__error.23
  
  ; <label>:24
    ret i32 0, !dbg !31
  
  __error.11: 
    call void (...) @__VERIFIER_error() #2 , !dbg !19
    unreachable, !dbg !19
  
  __error.19: 
    call void (...) @__VERIFIER_error() #2 , !dbg !27
    unreachable, !dbg !27
  
  __error.23: 
    call void (...) @__VERIFIER_error() #2 , !dbg !30
    unreachable, !dbg !30
  
} 

using predicates abs
List(0, 0, 0, 0)
no Repetitions, rtn linear automaton
linear auto created and about to return
using predicates abs
generating predicates for abstraction
running with predicates: 6
 Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ,
(%i  = 0 ) ,
(%i  <= 999 ) ,
((%i  + ((- 1 )  * %a ) )  <= 0 ) ,
((%a  + ((- 1 )  * %i ) )  <= 0 ) ,
(%a  = 0 ) 
I am doing the trace:List(0, 0, 1, 0, 0, 0, 0)

Fixed point reached with Predicates ===============
true 
 Or(  And(  Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,(%i  = 0 ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) ,false ) 
 Or(  And(  Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,(%i  = 0 ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) , And(  Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,(%i  = 0 ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) , And(  Not( (%a  = 0 ) ) , Not( (%i  = 0 ) ) , Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ,false ) 
 Or(  And(  Or( (%i  = 0 ) , Not( (%a  = 0 ) ) ) , Or(  Not( (%i  = 0 ) ) ,(%a  = 0 ) ) , Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) , And(  Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,(%i  = 0 ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) , And(  Not( (%a  = 0 ) ) , Not( (%i  = 0 ) ) , Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ,false ) 
 Or(  And(  Or( (%i  <= 999 ) , Not( (%a  = 0 ) ) ) , Or( (%i  = 0 ) , Not( (%a  = 0 ) ) ) , Or(  Not( (%i  = 0 ) ) ,(%a  = 0 ) ) , Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) , And(  Not( (%a  = 0 ) ) , Not( (%i  = 0 ) ) , Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ) 
 Or(  And(  Or( (%i  = 0 ) , Not( (%a  = 0 ) ) ) , Or(  Not( (%i  = 0 ) ) ,(%a  = 0 ) ) , Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) , And(  Not( (%a  = 0 ) ) , Not( (%i  = 0 ) ) , Not(  Or( ((%i  + ((- 1 )  * %a ) )  <= (- 1 ) ) ,((((- 1 )  * %i )  + %a )  <= (- 1 ) ) ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ) 
false 
------------
simplify cache hit is 40 and mis is 4
last loc eq to false? >>>yes
------------------safeBackEdges
candidate pairs Vector((1,4), (2,5))
new backedge found from 4 to 2 with choice(1) exitValue is 0
new backedge found from 5 to 3 with choice(2) exitValue is 1
----------------------
using predicates abs
generating predicates for abstraction
running with predicates: 7
(%i  = 0 ) ,
 Or( (%i  <= 999 ) ,(%i  >= 1001 ) ) ,
(1000  <= %i ) ,
(%i  <= 999 ) ,
((%i  + ((- 1 )  * %a ) )  <= 0 ) ,
((%a  + ((- 1 )  * %i ) )  <= 0 ) ,
(%a  = 0 ) 
I am doing the trace:List(0, 0, 1, 0, 1, 0, 0)

Fixed point reached with Predicates ===============
true 
 Or(  And(  Not( (1000  <= %i ) ) ,(%i  = 0 ) , Or( (%i  <= 999 ) ,(%i  >= 1001 ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) ,false ) 
 Or(  And(  Not( (1000  <= %i ) ) ,(%i  = 0 ) , Or( (%i  <= 999 ) ,(%i  >= 1001 ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) , And(  Not( (1000  <= %i ) ) ,(%i  = 0 ) , Or( (%i  <= 999 ) ,(%i  >= 1001 ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) , And(  Not( (%a  = 0 ) ) , Not( (1000  <= %i ) ) , Not( (%i  = 0 ) ) , Or( (%i  <= 999 ) ,(%i  >= 1001 ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ,false ) 
 Or(  And(  Or( (%i  = 0 ) , Not( (%a  = 0 ) ) ) , Or(  Not( (%i  = 0 ) ) ,(%a  = 0 ) ) , Not( (1000  <= %i ) ) , Or( (%i  <= 999 ) ,(%i  >= 1001 ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) , And(  Not( (1000  <= %i ) ) ,(%i  = 0 ) , Or( (%i  <= 999 ) ,(%i  >= 1001 ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) ,false ) 
 Or(  And(  Or(  Not(  Or( (%i  <= 999 ) ,(%i  >= 1001 ) ) ) ,(%i  <= 999 ) ) , Or( (%i  <= 999 ) , Not( (%a  = 0 ) ) ) , Or(  Not( (1000  <= %i ) ) , Not( (%i  <= 999 ) ) ) , Or( (%i  <= 999 ) ,(1000  <= %i ) ,(%i  >= 1001 ) ) , Or( (%i  = 0 ) , Not( (%a  = 0 ) ) ) , Or(  Not( (%i  = 0 ) ) ,(%a  = 0 ) ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) , And(  Not( (%a  = 0 ) ) , Not( (1000  <= %i ) ) , Not( (%i  = 0 ) ) , Or( (%i  <= 999 ) ,(%i  >= 1001 ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ) 
 Or(  And(  Not( (%a  = 0 ) ) , Not( (%i  <= 999 ) ) , Not(  Or( (%i  <= 999 ) ,(%i  >= 1001 ) ) ) , Not( (%i  = 0 ) ) ,(1000  <= %i ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ) 
false 
------------
simplify cache hit is 72 and mis is 9
last loc eq to false? >>>yes
------------------safeBackEdges
candidate pairs Vector((1,4))
new backedge found from 4 to 2 with choice(1) exitValue is 0
----------------------
using predicates abs
generating predicates for abstraction
running with predicates: 9
(%i  = 0 ) ,
(1000  <= %i ) ,
(%i  <= 999 ) ,
((%i  + ((- 1 )  * %a ) )  <= 0 ) ,
 Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ,
(%i  <= 1000 ) ,
(%i  >= 1000 ) ,
((%a  + ((- 1 )  * %i ) )  <= 0 ) ,
(%a  = 0 ) 
I am doing the trace:List(0, 0, 1, 0, 1, 1, 0, 0)

Fixed point reached with Predicates ===============
true 
 Or(  And(  Not( (%i  >= 1000 ) ) , Not( (1000  <= %i ) ) ,(%i  = 0 ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) , Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ,(%i  <= 1000 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) ,false ) 
 Or(  And(  Not( (%i  >= 1000 ) ) , Not( (1000  <= %i ) ) ,(%i  = 0 ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) , Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ,(%i  <= 1000 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) , And(  Not( (%i  >= 1000 ) ) , Not( (1000  <= %i ) ) ,(%i  = 0 ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) , Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ,(%i  <= 1000 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) , And(  Not( (%a  = 0 ) ) , Not( (%i  >= 1000 ) ) , Not( (1000  <= %i ) ) , Not( (%i  = 0 ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) , Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ,(%i  <= 1000 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ,false ) 
 Or(  And(  Or( (%i  = 0 ) , Not( (%a  = 0 ) ) ) , Or(  Not( (%i  = 0 ) ) ,(%a  = 0 ) ) , Not( (%i  >= 1000 ) ) , Not( (1000  <= %i ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) , Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ,(%i  <= 1000 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) , And(  Not( (%i  >= 1000 ) ) , Not( (1000  <= %i ) ) ,(%i  = 0 ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) , Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ,(%i  <= 1000 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ,(%a  = 0 ) ) ,false ) 
 Or(  And(  Or(  Not(  Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ) , Not( (%i  >= 1000 ) ) ) , Or(  Not( (%i  >= 1000 ) ) , Not( (%a  = 0 ) ) ) , Or(  Not( (1000  <= %i ) ) ,(%i  >= 1000 ) ) , Or(  Not( (%i  <= 999 ) ) ,(%a  <= 999 ) ,(%a  >= 1001 ) ) , Or( (1000  <= %i ) ,(%i  <= 999 ) ) , Or( (%i  = 0 ) , Not( (%a  = 0 ) ) ) , Or(  Not( (%i  = 0 ) ) ,(%a  = 0 ) ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,(%i  <= 1000 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) , And(  Not( (%a  = 0 ) ) , Not( (%i  >= 1000 ) ) , Not( (1000  <= %i ) ) , Not( (%i  = 0 ) ) ,(%i  <= 999 ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) , Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ,(%i  <= 1000 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ) 
 Or(  And(  Not( (%a  = 0 ) ) , Not(  Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ) , Not( (%i  <= 999 ) ) , Not( (%i  = 0 ) ) ,(1000  <= %i ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,(%i  <= 1000 ) ,(%i  >= 1000 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ) 
 Or(  And(  Not( (%a  = 0 ) ) , Not(  Or( (%a  <= 999 ) ,(%a  >= 1001 ) ) ) , Not( (%i  <= 999 ) ) , Not( (%i  = 0 ) ) ,(1000  <= %i ) ,((%i  + ((- 1 )  * %a ) )  <= 0 ) ,(%i  <= 1000 ) ,(%i  >= 1000 ) ,((%a  + ((- 1 )  * %i ) )  <= 0 ) ) ,false ) 
false 
------------
simplify cache hit is 112 and mis is 14
last loc eq to false? >>>yes
------------------safeBackEdges
candidate pairs Vector((1,4))
new backedge found from 4 to 2 with choice(1) exitValue is 0
----------------------
using predicates abs
List(0, 1, 0, 0)
no Repetitions, rtn linear automaton
linear auto created and about to return
using predicates abs
List(0, 1, 1, 0, 0)
no Repetitions, rtn linear automaton
linear auto created and about to return
TRUE