define i32 @main() #0  { 
  
    %1 = alloca i32, align 4
    %x = alloca i32, align 4
    %y = alloca i32, align 4
    store i32 0, i32* %1
    store i32 -50, i32* %x, align 4, !dbg !19
    %2 = call i32 (...) @__VERIFIER_nondet_int() , !dbg !20
    store i32 %2, i32* %y, align 4, !dbg !21
    %3 = load i32, i32* %y, align 4, !dbg !22
    %4 = icmp slt i32 -1000, %3, !dbg !23
    br i1 %4, label %5, label %8, !dbg !24
  
  ; <label>:5
    %6 = load i32, i32* %y, align 4, !dbg !25
    %7 = icmp slt i32 %6, 1000000, !dbg !27
    br label %8
  
  ; <label>:8
    %9 = phi i1 [ false, %0 ], [ %7, %5 ]
    %10 = zext i1 %9 to i32, !dbg !28
    call void @__VERIFIER_assume(i32 %10) , !dbg !30
    br label %11, !dbg !31
  
  ; <label>:11
    %12 = load i32, i32* %x, align 4, !dbg !32
    %13 = icmp slt i32 %12, 0, !dbg !34
    br i1 %13, label %14, label %20, !dbg !31
  
  ; <label>:14
    %15 = load i32, i32* %x, align 4, !dbg !35
    %16 = load i32, i32* %y, align 4, !dbg !36
    %17 = add nsw i32 %15, %16, !dbg !37
    store i32 %17, i32* %x, align 4, !dbg !38
    %18 = load i32, i32* %y, align 4, !dbg !39
    %19 = add nsw i32 %18, 1, !dbg !39
    store i32 %19, i32* %y, align 4, !dbg !39
    br label %11, !dbg !31
  
  ; <label>:20
    %21 = load i32, i32* %y, align 4, !dbg !40
    %22 = icmp sgt i32 %21, 0, !dbg !41
    br i1 %22, label %24, label %23, !dbg !42
  
  ; <label>:23
    br label %__error.23
  
  ; <label>:24
    ret i32 0, !dbg !44
  
  __error.23: 
    call void @__VERIFIER_error() , !dbg !43
    br label %24, !dbg !43
  
} 

using predicates abs
List(0, 0, 0, 1, 1, 0)
no Repetitions, rtn linear automaton
linear auto created and about to return
using predicates abs
generating predicates for abstraction
running with predicates: 7
%7 ,
(%x  = (- 50 ) ) ,
(%x  <= (- 1 ) ) ,
 Or(  And( %7 ,(%y  <= 999999 ) ) , And(  Not( %7 ) ,(1000000  <= %y ) ) ) ,
(%y  <= 0 ) ,
(0  <= %x ) ,
(%y  >= (- 999 ) ) 
I am doing the trace:List(0, 0, 0, 0, 0, 1, 1, 0)

Fixed point reached with Predicates ===============
true 
 Or(  And(  Not( (0  <= %x ) ) ,(%x  = (- 50 ) ) ,(%x  <= (- 1 ) ) ,(%y  >= (- 999 ) ) ) ,false ) 
 Or(  And(  Or( %7 , Not( (%y  <= 0 ) ) ) , Not( (0  <= %x ) ) ,(%x  = (- 50 ) ) ,(%x  <= (- 1 ) ) , Or(  And( %7 ,(%y  <= 999999 ) ) , And(  Not( %7 ) ,(1000000  <= %y ) ) ) ,(%y  >= (- 999 ) ) ) ,false ) 
 Or(  And(  Not( (0  <= %x ) ) ,%7 ,(%x  = (- 50 ) ) ,(%x  <= (- 1 ) ) , Or(  And( %7 ,(%y  <= 999999 ) ) , And(  Not( %7 ) ,(1000000  <= %y ) ) ) ,(%y  >= (- 999 ) ) ) ,false ) 
 Or(  And(  Not( (0  <= %x ) ) ,%7 ,(%x  = (- 50 ) ) ,(%x  <= (- 1 ) ) , Or(  And( %7 ,(%y  <= 999999 ) ) , And(  Not( %7 ) ,(1000000  <= %y ) ) ) ,(%y  >= (- 999 ) ) ) , And(  Not( (0  <= %x ) ) ,%7 ,(%x  = (- 50 ) ) ,(%x  <= (- 1 ) ) , Or(  And( %7 ,(%y  <= 999999 ) ) , And(  Not( %7 ) ,(1000000  <= %y ) ) ) ,(%y  >= (- 999 ) ) ) , And(  Or(  And( %7 ,(%y  <= 999999 ) ) , Not( (%y  <= 0 ) ) , And(  Not( %7 ) ,(1000000  <= %y ) ) ) , Not( (0  <= %x ) ) ,%7 ,(%x  <= (- 1 ) ) ,(%y  >= (- 999 ) ) ) , And(  Not( (0  <= %x ) ) ,%7 ,(%x  = (- 50 ) ) ,(%x  <= (- 1 ) ) , Or(  And( %7 ,(%y  <= 999999 ) ) , And(  Not( %7 ) ,(1000000  <= %y ) ) ) ,(%y  >= (- 999 ) ) ) , And(  Or(  Not( (%x  = (- 50 ) ) ) , Not( (%y  <= 0 ) ) ) , Not( (0  <= %x ) ) ,%7 ,(%x  <= (- 1 ) ) , Or(  And( %7 ,(%y  <= 999999 ) ) , And(  Not( %7 ) ,(1000000  <= %y ) ) ) ,(%y  >= (- 999 ) ) ) ,false ,false ) 
 Or(  And(  Or(  Not( (%y  <= 0 ) ) , Not( (0  <= %x ) ) ) , Or(  Not( (%x  = (- 50 ) ) ) , Not( (0  <= %x ) ) ) , Or(  Not( (%x  <= (- 1 ) ) ) , Not( (0  <= %x ) ) ) , Or( (%x  <= (- 1 ) ) ,(0  <= %x ) ) , Or(  And( %7 ,(%y  <= 999999 ) ) , Not( (%y  <= 0 ) ) , And(  Not( %7 ) ,(1000000  <= %y ) ) ) ,%7 ,(%y  >= (- 999 ) ) ) , And(  Or(  Not( (%y  <= 0 ) ) , Not( (0  <= %x ) ) ) , Or(  Not( (%x  = (- 50 ) ) ) , Not( (0  <= %x ) ) ) , Or(  And( %7 ,(%y  <= 999999 ) ) ,(0  <= %x ) , And(  Not( %7 ) ,(1000000  <= %y ) ) ) , Or(  Not( (%x  <= (- 1 ) ) ) , Not( (0  <= %x ) ) ) , Or( (%x  <= (- 1 ) ) ,(0  <= %x ) ) ,%7 ,(%y  >= (- 999 ) ) , Or(  Not( (%x  = (- 50 ) ) ) , Not( (%y  <= 0 ) ) ) ) ,false ) 
 Or(  And(  Not( (%y  <= 0 ) ) , Not( (%x  <= (- 1 ) ) ) , Not( (%x  = (- 50 ) ) ) ,%7 ,(0  <= %x ) ,(%y  >= (- 999 ) ) ) ,false ) 
false 
------------
simplify cache hit is 35 and mis is 8
last loc eq to false? >>>yes
------------------safeBackEdges
candidate pairs Vector((3,5))
new backedge found from 5 to 4 with choice(3) exitValue is 0
----------------------
using predicates abs
List(1, 0, 1, 1, 0)
no Repetitions, rtn linear automaton
linear auto created and about to return
using predicates abs
generating predicates for abstraction
running with predicates: 6
false ,
(%x  = (- 50 ) ) ,
(%y  <= (- 1000 ) ) ,
(%x  <= (- 1 ) ) ,
(%y  <= 0 ) ,
(0  <= %x ) 
I am doing the trace:List(1, 0, 0, 0, 1, 1, 0)

Fixed point reached with Predicates ===============
true 
 Or(  And(  Not( (0  <= %x ) ) ,(%x  = (- 50 ) ) ,(%y  <= (- 1000 ) ) ,(%x  <= (- 1 ) ) ,(%y  <= 0 ) ) ,false ) 
false 
false 
false 
false 
false 
------------
simplify cache hit is 36 and mis is 9
last loc eq to false? >>>yes
------------------safeBackEdges
candidate pairs Vector((2,4))
new backedge found from 4 to 3 with choice(2) exitValue is 0
----------------------
TRUE